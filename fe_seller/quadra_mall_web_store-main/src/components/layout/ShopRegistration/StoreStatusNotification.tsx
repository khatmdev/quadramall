import React from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { ExclamationTriangleIcon, LockClosedIcon, FlagIcon, ArrowLeftIcon } from '@heroicons/react/24/solid';
import { StoreStatus } from '@/types/sellerRegistration';

interface StoreStatusNotificationProps {
    status?: StoreStatus;
    storeName?: string;
}

const StoreStatusNotification: React.FC = () => {
    const navigate = useNavigate();
    const location = useLocation();
    const { status, storeName } = location.state as StoreStatusNotificationProps || {};

    const getStatusConfig = (status: StoreStatus) => {
        switch (status) {
            case StoreStatus.INACTIVE:
                return {
                    icon: <ExclamationTriangleIcon className="w-16 h-16 text-yellow-600" />,
                    title: 'C·ª≠a h√†ng t·∫°m ng·ª´ng ho·∫°t ƒë·ªông',
                    bgColor: 'from-yellow-50 to-orange-100',
                    borderColor: 'border-yellow-200',
                    textColor: 'text-yellow-800',
                    message: 'C·ª≠a h√†ng c·ªßa b·∫°n hi·ªán ƒëang ·ªü tr·∫°ng th√°i t·∫°m ng·ª´ng ho·∫°t ƒë·ªông.',
                    description: 'B·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v√† c√°ch k√≠ch ho·∫°t l·∫°i c·ª≠a h√†ng.',
                    actionText: 'Li√™n h·ªá h·ªó tr·ª£'
                };
            case StoreStatus.LOCKED:
                return {
                    icon: <LockClosedIcon className="w-16 h-16 text-red-600" />,
                    title: 'C·ª≠a h√†ng b·ªã kh√≥a',
                    bgColor: 'from-red-50 to-pink-100',
                    borderColor: 'border-red-200',
                    textColor: 'text-red-800',
                    message: 'C·ª≠a h√†ng c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a do vi ph·∫°m ch√≠nh s√°ch.',
                    description: 'Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ bi·∫øt l√Ω do c·ª• th·ªÉ v√† h∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c. Li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ n·∫øu c·∫ßn th√™m th√¥ng tin.',
                    actionText: 'Li√™n h·ªá h·ªó tr·ª£'
                };
            case StoreStatus.REPORTED:
                return {
                    icon: <FlagIcon className="w-16 h-16 text-orange-600" />,
                    title: 'C·ª≠a h√†ng ƒëang ƒë∆∞·ª£c xem x√©t',
                    bgColor: 'from-orange-50 to-yellow-100',
                    borderColor: 'border-orange-200',
                    textColor: 'text-orange-800',
                    message: 'C·ª≠a h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c xem x√©t do c√≥ b√°o c√°o t·ª´ kh√°ch h√†ng.',
                    description: 'Ch√∫ng t√¥i ƒëang trong qu√° tr√¨nh ƒëi·ªÅu tra. C·ª≠a h√†ng s·∫Ω ƒë∆∞·ª£c m·ªü l·∫°i sau khi ho√†n t·∫•t xem x√©t.',
                    actionText: 'Theo d√µi t√¨nh tr·∫°ng'
                };
            default:
                return {
                    icon: <ExclamationTriangleIcon className="w-16 h-16 text-gray-600" />,
                    title: 'C·ª≠a h√†ng kh√¥ng kh·∫£ d·ª•ng',
                    bgColor: 'from-gray-50 to-gray-100',
                    borderColor: 'border-gray-200',
                    textColor: 'text-gray-800',
                    message: 'C·ª≠a h√†ng hi·ªán kh√¥ng th·ªÉ truy c·∫≠p.',
                    description: 'Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.',
                    actionText: 'Li√™n h·ªá h·ªó tr·ª£'
                };
        }
    };

    const config = status ? getStatusConfig(status) : getStatusConfig(StoreStatus.INACTIVE);

    const handleBackToSelectStore = () => {
        navigate('/select-store', { replace: true });
    };

    const handleContactSupport = () => {
        // Implement contact support logic
        window.open('mailto:support@quadramall.com', '_blank');
    };

    return (
        <div className={`min-h-screen bg-gradient-to-br ${config.bgColor} flex items-center justify-center px-4`}>
            <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
                {/* Icon */}
                <div className="flex justify-center mb-6">
                    {config.icon}
                </div>

                {/* Title */}
                <h1 className={`text-2xl font-bold ${config.textColor} mb-4`}>
                    {config.title}
                </h1>

                {/* Store Name */}
                {storeName && (
                    <p className="text-gray-600 mb-4">
                        <span className="font-medium">C·ª≠a h√†ng:</span> {storeName}
                    </p>
                )}

                {/* Message */}
                <div className={`border ${config.borderColor} rounded-lg p-4 mb-6`}>
                    <p className={`${config.textColor} font-medium mb-2`}>
                        {config.message}
                    </p>
                    <p className="text-gray-600 text-sm">
                        {config.description}
                    </p>
                </div>

                {/* Contact Info */}
                <div className="bg-gray-50 rounded-lg p-4 mb-6">
                    <h3 className="font-medium text-gray-800 mb-2">Th√¥ng tin h·ªó tr·ª£:</h3>
                    <div className="text-sm text-gray-600 space-y-1">
                        <p>üìß Email: support@quadramall.com</p>
                        <p>üìû Hotline: 1900-xxxx</p>
                        <p>üïê Gi·ªù l√†m vi·ªác: 8:00 - 22:00</p>
                    </div>
                </div>

                {/* Actions */}
                <div className="space-y-3">
                    <button
                        onClick={handleContactSupport}
                        className={`w-full py-3 px-6 rounded-lg font-semibold transition-colors duration-200 ${
                            status === StoreStatus.LOCKED
                                ? 'bg-red-600 hover:bg-red-700 text-white'
                                : status === StoreStatus.REPORTED
                                    ? 'bg-orange-600 hover:bg-orange-700 text-white'
                                    : 'bg-yellow-600 hover:bg-yellow-700 text-white'
                        }`}
                    >
                        {config.actionText}
                    </button>

                    <button
                        onClick={handleBackToSelectStore}
                        className="w-full py-3 px-6 border border-gray-300 rounded-lg font-semibold text-gray-700 hover:bg-gray-50 transition-colors duration-200 flex items-center justify-center gap-2"
                    >
                        <ArrowLeftIcon className="w-4 h-4" />
                        Ch·ªçn c·ª≠a h√†ng kh√°c
                    </button>
                </div>

                {/* Additional Info */}
                <div className="mt-6 text-xs text-gray-500">
                    <p>N·∫øu b·∫°n cho r·∫±ng ƒë√¢y l√† l·ªói, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ k·ªπ thu·∫≠t.</p>
                </div>
            </div>
        </div>
    );
};

export default StoreStatusNotification;